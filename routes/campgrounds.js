var express = require('express');var router = express.Router();var Campground = require('../models/campground');var middleWare = require('../middleware');// ========================================//    Camp Grounds Routes// ========================================router.get('/' , function (req,res) {    // Get All Campground from DB    Campground.find({} , function (err , campgrounds) {        if (err) throw err;        res.render('campground/index' , {campgrounds : campgrounds});    });});// POST ROUTErouter.post('/' ,middleWare.isLoggedIn , function (req , res) {    //get data from form    var name = req.body.name;    var image = req.body.image;    var des = req.body.description;    var author =  {        id : req.user._id,        username : req.user.username    };    var newCampground = { name : name , image : image , description: des , author : author};    Campground.create(newCampground , function (err , newlyCreated) {        if(err) throw err;        else{            console.log(newlyCreated);            res.redirect('/campgrounds')        }    });});// ========================================//    New Route// ========================================router.get('/new', middleWare.isLoggedIn , function (req,res) {    res.render('campground/new')});// ========================================//   SHOW Route// ========================================router.get('/:id' , function (req ,res) {    Campground.findById(req.params.id).populate("comments").exec( function (err , foundCamp) {        if (err) throw err;        else {            res.render('campground/show' , {campground : foundCamp});        }    });});// ========================================//   Edit Route// ========================================router.get("/:id/edit", middleWare.checkCampgroundOwnership , function (req, res) {    // is user logged in    Campground.findById(req.params.id , function (err ,foundCampground) {        //does user own the campground        res.render("campground/edit" , {campground : foundCampground})    });});// ========================================//   Update Route// ========================================router.put('/:id', middleWare.checkCampgroundOwnership , function (req,res) {    Campground.findByIdAndUpdate(req.params.id , req.body.campground , function (err , updatedCampground) {        if (err){            res.redirect('/campgrounds')        }else {            res.redirect('/campgrounds/' + req.params.id)        }    })});// ========================================//   Delete Route// ========================================router.delete('/:id',middleWare.checkCampgroundOwnership , function (req, res) {   Campground.findByIdAndRemove(req.params.id , function (err) {       if(err){           res.redirect('/campgrounds')       }       else {           res.redirect('/campgrounds')       }   })});module.exports = router;